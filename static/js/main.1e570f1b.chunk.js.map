{"version":3,"sources":["components/InventoryForm.js","components/EditRecord.js","components/InventoryList.js","components/AddNewInventory.js","components/Error.js","App.js","index.js"],"names":["InventoryForm","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","form","props","record","_createClass","key","value","this","setFieldsValue","location","notes","React","createElement","Form","labelCol","span","layout","Item","name","label","rules","required","message","Input","TextArea","Component","EditRecord","_ref","visible","updateRecord","onCancel","_Form$useForm","useForm","_slicedToArray","Modal","title","itemName","onOk","validateFields","then","values","resetFields","itemId","catch","info","console","log","Search","InventoryList","sortedInfo","columns","dataIndex","sorter","a","b","localeCompare","sortOrder","columnKey","order","render","moment","format","Date","addDate","Fragment","Button","ghost","type","shape","icon","EditOutlined","onClick","editRecord","DeleteOutlined","deleteRecord","align","Space","style","marginBottom","width","placeholder","defaultValue","searchTableValue","enterButton","onSearch","search","allowClear","clear","CloseCircleOutlined","Table","size","dataSource","filterTable","inventory","rowKey","loading","onChange","handleTableChange","pagination","defaultPageSize","showSizeChanger","expandable","expandedRowRender","AddNewInventory","addRecord","Error","id","class","Link","to","Header","Layout","Sider","Content","App","toggle","setState","collapsed","filters","filteredInfo","filter","o","Object","keys","some","k","String","toLowerCase","includes","tempInventory","without","itemIndex","findIndex","_objectSpread","item","lastIndex","unshift","alert","_this2","fetch","response","json","result","map","_this3","Router","trigger","collapsible","className","Menu","theme","mode","defaultSelectedKeys","UnorderedListOutlined","PlusOutlined","padding","MenuUnfoldOutlined","MenuFoldOutlined","margin","minHeight","Switch","Route","path","exact","component","assign","rootElement","document","getElementById","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.1e570f1b.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Form,\n  Input\n} from 'antd';\n\nclass InventoryForm extends React.Component {\n  state = {\n    form: this.props.form,\n    record: this.props.record\n  };\n\n  componentDidMount() {\n    if (this.state.record !== null) {\n      this.state.form.setFieldsValue({\n        location: this.state.record.location,\n        notes: this.state.record.notes,\n      });\n    }\n  }\n\n  render() {\n    const { form } = this.state;\n    \n    return (\n      <Form\n        form={form}\n        labelCol={{\n          span: 4,\n        }}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          name=\"location\"\n          label=\"Location:\"\n          rules={[\n            {\n              required: true,\n              message: \"This information is required.\"\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item name=\"notes\" label=\"Notes:\">\n          <Input.TextArea />\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n \nexport default InventoryForm;","import React from 'react';\nimport { default as InventoryForm } from \"./InventoryForm\";\nimport { Modal, Form } from 'antd';\n\nconst EditRecord = ({ visible, updateRecord, onCancel, record }) => {\n  const [form] = Form.useForm();\n\n  return (\n    <Modal\n      visible={visible}\n      title={record.itemName}\n      onCancel={onCancel}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            form.resetFields();\n            updateRecord(record.itemId, values);\n          })\n          .catch((info) => {\n            console.log('Validate Failed:', info);\n          });\n      }}\n    >\n      <InventoryForm form={form} record={record} key={record.itemId} />\n    </Modal>\n  );\n};\n\nexport default EditRecord;","import React from \"react\";\nimport moment from \"moment\";\nimport { default as EditRecord } from \"./EditRecord\";\nimport { Table, Button, Input, Space } from \"antd\";\nimport {\n  DeleteOutlined,\n  EditOutlined,\n  CloseCircleOutlined\n} from \"@ant-design/icons\";\n\nconst { Search } = Input;\n\nclass InventoryList extends React.Component {\n  render() {\n    let { sortedInfo } = this.props;\n    sortedInfo = sortedInfo || {};\n\n    const columns = [\n      {\n        title: \"Item\",\n        dataIndex: \"itemName\",\n        key: \"itemName\",\n        sorter: (a, b) => {\n          return a.itemName.localeCompare(b.itemName);\n        },\n        sortOrder: sortedInfo.columnKey === \"itemName\" && sortedInfo.order\n      },\n      {\n        title: \"Location\",\n        dataIndex: \"location\",\n        key: \"location\",\n        sorter: (a, b) => {\n          return a.location.localeCompare(b.location);\n        },\n        sortOrder: sortedInfo.columnKey === \"location\" && sortedInfo.order\n      },\n      {\n        title: \"Date Added\",\n        dataIndex: \"addDate\",\n        key: \"addDate\",\n        render: (value) => moment(value).format(\"LLL\"),\n        sorter: (a, b) => new Date(a.addDate) - new Date(b.addDate),\n        sortOrder: sortedInfo.columnKey === \"addDate\" && sortedInfo.order\n      },\n      {\n        key: \"action\",\n        render: (record) => (\n          <>\n            <Button\n              ghost\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<EditOutlined />}\n              onClick={() => this.props.editRecord(record)}\n            />\n            <Button\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<DeleteOutlined />}\n              onClick={() => this.props.deleteRecord(record)}\n            />\n          </>\n        )\n      }\n    ];\n\n    return (\n      <>\n        <div align=\"right\">\n          <Space>\n            <Search\n              style={{ marginBottom: 10, width: 200 }}\n              placeholder=\"Search by...\"\n              defaultValue={this.props.searchTableValue}\n              enterButton\n              onSearch={this.props.search}\n              allowClear=\"true\"\n            />\n            <Button style={{ marginBottom: 10 }} onClick={this.props.clear}>\n              <CloseCircleOutlined />\n              Clear Search\n            </Button>\n          </Space>\n        </div>\n\n        <Table\n          size=\"small\"\n          dataSource={\n            this.props.filterTable == null\n              ? this.props.inventory\n              : this.props.filterTable\n          }\n          rowKey=\"itemId\"\n          columns={columns}\n          loading={this.props.loading}\n          onChange={this.props.handleTableChange}\n          pagination={{ defaultPageSize: 10, showSizeChanger: true }}\n          expandable={{\n            expandedRowRender: (record) => <p>{record.notes}</p>\n          }}\n        />\n\n        <EditRecord\n          visible={this.props.visible}\n          updateRecord={this.props.updateRecord}\n          onCancel={this.props.onCancel}\n          record={this.props.record}\n        />\n      </>\n    );\n  }\n}\n\nexport default InventoryList;\n","import React from \"react\";\nimport { default as InventoryForm } from \"./InventoryForm\";\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst AddNewInventory = ({ addRecord }) => {\n  const [form] = Form.useForm();\n  \n  return (\n    <>\n      <Form\n        labelCol={{\n          span: 4,\n        }}\n        layout=\"vertical\"\n        form={form}\n      >\n        <Form.Item\n          name=\"itemName\"\n          label=\"Item Name:\"\n          rules={[\n            {\n              required: true,\n              message: \"This information is required.\"\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n      </Form>\n      \n      <InventoryForm record='null' form={form} />\n\n      <Button\n        type=\"primary\"\n        shape=\"round\"\n        onClick={() => {\n          form\n            .validateFields()\n            .then((values) => {\n              form.resetFields();\n              addRecord(values);\n            })\n            .catch((info) => {\n              console.log('Validate Failed:', info);\n            });\n        }}\n      >\n        Add New Inventory\n      </Button>\n    </>\n  );\n}\n\nexport default AddNewInventory;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Error.css';\n\nconst Error = () => {\n    return (\n        <div id=\"notfound\">\n            <div class=\"notfound\">\n                <div class=\"notfound-404\">\n                    <h1>Oops!</h1>\n                    <h2>404 - The Page can't be found</h2>\n                </div>\n                <Link to=\"/\">Go To Homepage</Link>\n            </div>\n        </div>\n    );\n}\n \nexport default Error;","import React from 'react';\nimport { findIndex, without } from 'lodash';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport { Layout, Menu } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UnorderedListOutlined,\n  PlusOutlined\n} from '@ant-design/icons';\nimport {\n  InventoryList,\n  AddNewInventory,\n  Error\n} from './components';\n\nconst { Header, Sider, Content } = Layout;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      collapsed: false,\n      inventory: [],\n      loading: true,\n      lastIndex: 0,\n      filteredInfo: null,\n      sortedInfo: null,\n      filterTable: null,\n      searchTableValue: \"\",\n      visible: false,\n      record: []\n    };\n  };\n\n  toggle = () => {\n    this.setState({ collapsed: !this.state.collapsed });\n  };\n\n  handleTableChange = (pagination, filters, sorter) => {\n    this.setState({\n      filteredInfo: filters,\n      sortedInfo: sorter,\n    });\n  };\n\n  search = value => {\n    const { inventory } = this.state;\n\n    const filterTable = inventory.filter(o =>\n      Object.keys(o).some(k =>\n        String(o[k])\n          .toLowerCase()\n          .includes(value.toLowerCase())\n      )\n    );\n\n    this.setState({ filterTable, searchTableValue: value });\n  };\n\n  clear = () => {\n    this.setState({ filterTable: null, searchTableValue: null });\n  };\n\n  deleteRecord = record => {\n    let tempInventory = this.state.inventory;\n    tempInventory = without(tempInventory, record);\n\n    this.setState({ inventory: tempInventory });\n  };\n\n  onCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  editRecord = record => {\n    this.setState({ visible: true, record: record });\n  };\n\n  updateRecord = (itemId, values) => {\n    let tempInventory = this.state.inventory;\n    let itemIndex = findIndex(this.state.inventory, {\n      itemId: itemId\n    });\n\n    tempInventory[itemIndex] = {\n      ...tempInventory[itemIndex],\n      location: values.location,\n      notes: values.notes\n    }\n\n    this.setState({ inventory: tempInventory, visible: false, filterTable: null });\n    this.search(this.state.searchTableValue);\n  };\n\n  addRecord = item => {\n    let tempInventory = this.state.inventory;\n    item.itemId = this.state.lastIndex;\n    item.addDate = new Date();\n    tempInventory.unshift(item);\n    this.setState({ inventory: tempInventory, lastIndex: this.state.lastIndex + 1})\n    alert(\"Submitted\")\n  };\n\n  componentDidMount() {\n    fetch('./data-InventoryList.json')\n      .then(response => response.json())\n      .then(result => {\n        const inventory = result.map(item => {\n          item.itemId = this.state.lastIndex;\n          this.setState({ lastIndex: this.state.lastIndex + 1 });\n          return item;\n        })\n        this.setState({ inventory: inventory, loading: false })\n      })\n  };\n\n  render() {\n    return (\n      <Router>\n        <Layout>\n          <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n            <div className=\"logo\">\n              Inventory\n            </div>\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n              <Menu.Item key=\"inventory-list\" icon={<UnorderedListOutlined />}>\n                <Link to='/'>\n                  Inventory List\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"add-new-inventory\" icon={<PlusOutlined />}>\n                <Link to='/AddNewInventory'>\n                  Add New Inventory\n                </Link>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n              {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                className: 'trigger',\n                onClick: this.toggle,\n              })}\n            </Header>\n            <Content\n              className=\"site-layout-background\"\n              style={{\n                margin: '24px 16px',\n                padding: 24,\n                minHeight: 280,\n              }}\n            >\n              <Switch>\n                <Route path='/' exact component={(props) => (\n                  <InventoryList\n                    {...this.state}\n                    handleTableChange={this.handleTableChange}\n                    search={this.search}\n                    clear={this.clear}\n                    deleteRecord={this.deleteRecord}\n                    editRecord={this.editRecord}\n                    updateRecord={this.updateRecord}\n                    onCancel={this.onCancel}\n                  />\n                )} />\n                <Route path='/AddNewInventory' exact component={(props) => (\n                  <AddNewInventory\n                    addRecord={this.addRecord}\n                  />\n                )} />\n                <Route component={Error} />\n              </Switch>\n            </Content>\n          </Layout>\n        </Layout>\n      </Router>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}